{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAgBlD,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACkCC,UAAUH,GAD5C,+DAEFI,MAAMF,GAFJ,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAYdM,GAZc,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIvC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGrB,sBACEgB,UAAU,yCADZ,UAEE,qBACEC,IAAMjB,EACNkB,IAAMR,IAER,4BACIA,QCVGS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEdd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAW,WACT1B,EAAQC,GACL0B,MAAK,SAAAb,GACJW,EAAS,CACPjB,KAAMM,EACNS,SAAS,SAGd,CAAEtB,IAEEuB,EDd0BI,CAAa3B,GAAjCa,EAF0B,EAE/BN,KAAae,EAFkB,EAElBA,QAErB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBACEA,UAAU,YADZ,SAEE,6BAEIL,EAAOJ,KAAK,SAACC,GAAD,OACV,cAAC,EAAD,eAEOA,GADCA,EAAIC,eEdbiB,EAAe,WAAO,IAAD,EAEE1C,mBAAS,CAAC,kBAFZ,mBAE3B2C,EAF2B,KAEf5C,EAFe,KAIhC,OACE,qCACE,8CAGA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEI4C,EAAWpB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCdpB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.33874ed9.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ( { setCategories } ) => {\n\n  const [inputValue, setinputValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setinputValue(e.target.value )\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if(inputValue.trim().length > 2) {\n      setCategories(cats => [inputValue, ...cats])\n      setinputValue('')\n    }\n  }\n\n  return (\n    <form onSubmit={ handleSubmit }>\n      <input\n        type=\"text\"\n        value={ inputValue}\n        onChange={ handleInputChange }\n      />\n    </form>\n  )\n}\n\n  AddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n  }","\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=DGjhl42h7GLgCajsxqB41ySAf3Q2NAEg`\n  const resp = await fetch(url)\n  const { data } = await resp.json()\n\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  })\n  return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n\n  console.log(id, title, url)\n\n  return (\n    <div\n      className=\"card animate__animated animate__fadeIn\">\n      <img\n        src={ url }\n        alt={ title }\n      />\n      <p>\n        { title }\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n  const { data:images, loading } = useFetchGifs(category)\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n      { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n      <div\n        className=\"card-grid\">\n        <ol>\n          {\n            images.map( (img) => (\n              <GifGridItem\n                key={ img.id }\n                { ...img } />\n            ))\n          }\n        </ol>\n      </div>\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect( () => {\n    getGifs(category)\n      .then(images => {\n        setState({\n          data: images,\n          loading: false\n        })\n      })\n  }, [ category ])\n\n  return state\n\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GifExpertApp = () => {\n\nconst [categories, setCategories] = useState(['One Punch Man'])\n\n  return (\n    <>\n      <h2>\n        GifExpertApp\n      </h2>\n      <AddCategory setCategories={ setCategories }/>\n      <hr />\n      <ol>\n        {\n          categories.map((category) => (\n            <GifGrid\n              key={ category }\n              category={ category } />\n          ))\n        }\n      </ol>\n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}